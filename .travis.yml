dist: xenial
sudo: required
language: cpp

matrix:
  include:
    - stage: analysis
      os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
            - clang-tidy-8
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
      before_install:
        - pyenv global 3.7.1
        - eval "${MATRIX_EVAL}"
      install:
        - pip --version
        - python -V
        - pip install --upgrade pip
        - pip install cmake ninja conan pytest
      script:
        - conan install -if build -g cmake_paths --build=missing .
        - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -Bbuild -DENABLE_TIDY=ON -DENABLE_UNITTESTS_IN_BUILD=OFF -DCMAKE_PROJECT_INCLUDE=build/conan_paths.cmake .
        - cmake --build build --target tidy

    - stage: test
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - pyenv global 3.7.1        

    - stage: test
      os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
      before_install:
        - pyenv global 3.7.1

    - stage: test
      os: osx
      osx_image: xcode10.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++
      before_install:
        - which python3
        - python3 -V
        - ln -sfn "$(which python3)" /usr/local/bin/python
        - ln -sfn "$(which pip3)" /usr/local/bin/pip
        - python -V


before_install:
    - eval "${MATRIX_EVAL}"

install:
  - pip --version
  - python -V
  - pip install --upgrade pip
  - pip install cmake ninja conan pytest

script:
  - conan install -if build -g cmake_paths --build=missing .
  - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -Bbuild -DENABLE_UNITTESTS_IN_BUILD=OFF -DCMAKE_PROJECT_INCLUDE=build/conan_paths.cmake .
  - cmake --build build --target check-unit
  - cmake --build build --target check-functional
